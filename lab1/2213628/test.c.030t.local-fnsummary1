
;; Function printf (printf, funcdef_no=5, decl_uid=1743, cgraph_uid=6, symbol_order=5)

No signature change: function type has unhandled attribute nonnull.

Analyzing function body size: printf/5

IPA function summary for printf/5 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function print_message (print_message, funcdef_no=24, decl_uid=3954, cgraph_uid=25, symbol_order=24)


Analyzing function body size: print_message/24

IPA function summary for print_message/24
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    printf/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
       op0 is compile time invariant

void print_message ()
{
  <bb 2> :
  printf ("fundamentals of compiling\n");
  return;

}



;; Function add (add, funcdef_no=25, decl_uid=3957, cgraph_uid=26, symbol_order=25)


Analyzing function body size: add/25

IPA function summary for add/25
  global time:     3.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op1 changed)
  calls:

int add (int a, int b)
{
  int _3;

  <bb 2> :
  _3 = a_1(D) + b_2(D);
  return _3;

}



;; Function main (main, funcdef_no=26, decl_uid=3964, cgraph_uid=27, symbol_order=26)


Analyzing function body size: main/26
   fp_expression set

IPA function summary for main/26 fp_expression
  global time:     102.000000
  self size:       40
  global size:     0
  min size:       0
  self stack:      16
  global stack:    16
    size:17.000000, time:17.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    printf/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
    printf/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
       op1 is compile time invariant
    printf/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
       op1 is compile time invariant
    printf/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
    print_message/24 function not considered for inlining
      freq:1.00 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0
    add/25 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0
    scanf/28 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  int sum1;
  int i;
  int n;
  float arr[3];
  float _1;
  double _2;
  double _3;
  double _4;
  double _5;
  float _6;
  int n.0_7;
  float _8;
  int _9;
  float _10;
  int _11;
  float _12;
  double _13;
  int _29;

  <bb 2> :
  arr[0] = 5.0e+0;
  arr[1] = 7.0e+0;
  arr[2] = 0.0;
  scanf ("%d", &n);
  i_21 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = arr[2];
  _2 = (double) _1;
  _3 = (double) i_14;
  _4 = _3 * 1.000000000000000055511151231257827021181583404541015625e-1;
  _5 = _2 + _4;
  _6 = (float) _5;
  arr[2] = _6;
  i_33 = i_14 + 1;

  <bb 4> :
  # i_14 = PHI <i_21(2), i_33(3)>
  n.0_7 = n;
  if (i_14 <= n.0_7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _8 = arr[1];
  _9 = (int) _8;
  _10 = arr[0];
  _11 = (int) _10;
  sum1_23 = add (_11, _9);
  print_message ();
  printf ("integer: %d\n", sum1_23);
  printf ("floating: %f\n", 3.140000000000000124344978758017532527446746826171875e+0);
  printf ("constant: %d\n", 42);
  _12 = arr[2];
  _13 = (double) _12;
  printf ("sum2: %f\n", _13);
  _29 = 0;
  arr ={v} {CLOBBER(eol)};
  n ={v} {CLOBBER(eol)};
  return _29;

}


