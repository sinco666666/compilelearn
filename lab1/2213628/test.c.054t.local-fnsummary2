
;; Function printf (printf, funcdef_no=5, decl_uid=1743, cgraph_uid=6, symbol_order=5)

No signature change: function type has unhandled attribute nonnull.

Analyzing function body size: printf/5

IPA function summary for printf/5 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function print_message (print_message, funcdef_no=24, decl_uid=3954, cgraph_uid=25, symbol_order=24)


Analyzing function body size: print_message/24

IPA function summary for print_message/24
  global time:     14.000000
  self size:       6
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

void print_message ()
{
  <bb 2> [local count: 1073741824]:
  __printf_chk (2, "fundamentals of compiling\n");
  return;

}



;; Function add (add, funcdef_no=25, decl_uid=3957, cgraph_uid=26, symbol_order=25)


Analyzing function body size: add/25

IPA function summary for add/25
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op1 changed)
  calls:

int add (int a, int b)
{
  int _3;

  <bb 2> [local count: 1073741824]:
  _3 = a_1(D) + b_2(D);
  return _3;

}



;; Function main (main, funcdef_no=26, decl_uid=3964, cgraph_uid=27, symbol_order=26) (executed once)


Analyzing function body size: main/26
   fp_expression set

IPA function summary for main/26 fp_expression
  global time:     148.636364
  self size:       34
  global size:     44
  min size:       0
  self stack:      4
  global stack:    4
    size:7.000000, time:59.636364
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
    __printf_chk/27 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    print_message/24 function not considered for inlining
      freq:1.00 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0
    add/25 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0
       op0 is compile time invariant
       op1 is compile time invariant
    scanf/28 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  float arr$2;
  int sum1;
  int i;
  int n;
  double _1;
  double _2;
  double _3;
  double _4;
  float _5;
  int n.0_6;
  double _7;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  _1 = (double) arr$2_12;
  _2 = (double) i_8;
  _3 = _2 * 1.000000000000000055511151231257827021181583404541015625e-1;
  _4 = _1 + _3;
  _5 = (float) _4;
  i_17 = i_8 + 1;

  <bb 4> [local count: 1073741824]:
  # i_8 = PHI <0(2), i_17(3)>
  # arr$2_12 = PHI <0.0(2), _5(3)>
  n.0_6 = n;
  if (n.0_6 >= i_8)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # arr$2_15 = PHI <arr$2_12(4)>
  sum1_13 = add (5, 7);
  print_message ();
  __printf_chk (2, "integer: %d\n", sum1_13);
  __printf_chk (2, "floating: %f\n", 3.140000000000000124344978758017532527446746826171875e+0);
  __printf_chk (2, "constant: %d\n", 42);
  _7 = (double) arr$2_15;
  __printf_chk (2, "sum2: %f\n", _7);
  n ={v} {CLOBBER(eol)};
  return 0;

}


