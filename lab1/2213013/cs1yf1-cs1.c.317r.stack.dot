digraph "cs1yf1-cs1.c.317r.stack" {
overlap=false;
subgraph "cluster_print_message" {
	style="dashed";
	color="black";
	label="print_message ()";
	fn_6_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_6_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 3:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ 13:\ [--sp:DI]=bp:DI\l\
|\ \ \ 14:\ bp:DI=sp:DI\l\
|\ \ \ 15:\ NOTE_INSN_PROLOGUE_END\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 5:\ ax:DI=`*.LC0'\l\
|\ \ \ \ 6:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ \ \ 7:\ ax:SI=call\ [`puts']\ argc:0\l\
|\ \ \ 11:\ 0\l\
|\ \ \ 16:\ NOTE_INSN_EPILOGUE_BEG\l\
|\ \ \ 17:\ bp:DI=[sp:DI++]\l\
\ \ \ \ \ \ REG_CFA_DEF_CFA\ sp:DI+0x8\l\
|\ \ \ 18:\ simple_return\l\
}"];

	fn_6_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_6_basic_block_0:s -> fn_6_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_6_basic_block_2:s -> fn_6_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_6_basic_block_0:s -> fn_6_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_add" {
	style="dashed";
	color="black";
	label="add ()";
	fn_7_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_7_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 5:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ 20:\ [--sp:DI]=bp:DI\l\
|\ \ \ 21:\ bp:DI=sp:DI\l\
|\ \ \ 22:\ [scratch]=unspec[[scratch]]\ 17\l\
|\ \ \ 23:\ NOTE_INSN_PROLOGUE_END\l\
|\ \ \ \ 2:\ [bp:DI-0x4]=di:SI\l\
|\ \ \ \ 3:\ [bp:DI-0x8]=si:SI\l\
|\ \ \ \ 4:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 7:\ dx:SI=[bp:DI-0x4]\l\
|\ \ \ \ 8:\ ax:SI=[bp:DI-0x8]\l\
|\ \ \ \ 9:\ \{ax:SI=ax:SI+dx:SI;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_EQUAL\ [frame:DI-0x4]+[frame:DI-0x8]\l\
|\ \ \ 17:\ use\ ax:SI\l\
|\ \ \ 24:\ NOTE_INSN_EPILOGUE_BEG\l\
|\ \ \ 25:\ [scratch]=unspec[[scratch]]\ 17\l\
|\ \ \ 26:\ bp:DI=[sp:DI++]\l\
\ \ \ \ \ \ REG_CFA_DEF_CFA\ sp:DI+0x8\l\
|\ \ \ 27:\ simple_return\l\
}"];

	fn_7_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_7_basic_block_0:s -> fn_7_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_7_basic_block_2:s -> fn_7_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_7_basic_block_0:s -> fn_7_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_8_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_8_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 4:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ 106:\ [--sp:DI]=bp:DI\l\
|\ \ 107:\ bp:DI=sp:DI\l\
|\ \ 108:\ \{sp:DI=sp:DI-0x20;clobber\ flags:CC;clobber\ [scratch];\}\l\
|\ \ 109:\ NOTE_INSN_PROLOGUE_END\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 3:\ \{[bp:DI-0x8]=unspec[[0x28]]\ 79;ax:DI=0;clobber\ flags:CC;\}\l\
|\ \ \ \ 6:\ xmm0:SF=[`*.LC1']\l\
|\ \ \ \ 7:\ [bp:DI-0x14]=xmm0:SF\l\
|\ \ \ \ 8:\ xmm0:SF=[`*.LC2']\l\
|\ \ \ \ 9:\ [bp:DI-0x10]=xmm0:SF\l\
|\ \ 120:\ xmm0:SF=0.0\l\
|\ \ \ 11:\ [bp:DI-0xc]=xmm0:SF\l\
|\ \ 121:\ ax:DI=bp:DI-0x20\l\
|\ \ \ 13:\ si:DI=ax:DI\l\
|\ \ \ 14:\ ax:DI=`*.LC4'\l\
|\ \ \ 15:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC4'\l\
|\ \ \ 16:\ ax:QI=0\l\
|\ \ \ 17:\ ax:SI=call\ [`*__isoc99_scanf']\ argc:0\l\
|\ \ \ 18:\ [bp:DI-0x1c]=0\l\
|\ \ 102:\ pc=L31\l\
}"];

	fn_8_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 31:\ L31:\l\
|\ \ \ 32:\ NOTE_INSN_BASIC_BLOCK\ 4\l\
|\ \ \ 33:\ ax:SI=[bp:DI-0x20]\l\
|\ \ \ 35:\ flags:CCGC=cmp([bp:DI-0x1c],ax:SI)\l\
|\ \ \ 36:\ pc=\{(flags:CCGC\<=0)?L34:pc\}\l\
}"];

	fn_8_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 37:\ NOTE_INSN_BASIC_BLOCK\ 5\l\
|\ \ \ 38:\ xmm0:SF=[bp:DI-0x10]\l\
|\ \ \ 39:\ dx:SI=fix(xmm0:SF)\l\
|\ \ \ 40:\ xmm0:SF=[bp:DI-0x14]\l\
|\ \ \ 41:\ ax:SI=fix(xmm0:SF)\l\
|\ \ \ 42:\ si:SI=dx:SI\l\
|\ \ \ 43:\ di:SI=ax:SI\l\
|\ \ \ 44:\ ax:SI=call\ [`add']\ argc:0\l\
|\ \ \ 46:\ [bp:DI-0x18]=ax:SI\l\
|\ \ \ 47:\ ax:QI=0\l\
|\ \ \ 48:\ call\ [`print_message']\ argc:0\l\
|\ \ \ 49:\ ax:SI=[bp:DI-0x18]\l\
|\ \ \ 50:\ si:SI=ax:SI\l\
|\ \ \ 51:\ ax:DI=`*.LC6'\l\
|\ \ \ 52:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC6'\l\
|\ \ \ 53:\ ax:QI=0\l\
|\ \ \ 54:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 55:\ ax:DF=[`*.LC7']\l\
\ \ \ \ \ \ REG_EQUAL\ 3.140000000000000124344978758017532527446746826171875e+0\l\
|\ \ \ 56:\ xmm0:DF=ax:DF\l\
|\ \ \ 57:\ ax:DI=`*.LC8'\l\
|\ \ \ 58:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC8'\l\
|\ \ \ 59:\ ax:QI=0x1\l\
|\ \ \ 60:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 61:\ si:SI=0x2a\l\
|\ \ \ 62:\ ax:DI=`*.LC9'\l\
|\ \ \ 63:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC9'\l\
|\ \ \ 64:\ ax:QI=0\l\
|\ \ \ 65:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 66:\ xmm0:SF=[bp:DI-0xc]\l\
|\ \ 114:\ xmm3:V2DF=const_vector\l\
|\ \ 115:\ xmm3:V2DF=vec_merge(vec_duplicate(float_extend(xmm0:SF)),xmm3:V2DF,0x1)\l\
|\ \ 105:\ ax:DF=xmm3:DF\l\
|\ \ \ 68:\ xmm0:DF=ax:DF\l\
|\ \ \ 69:\ ax:DI=`*.LC10'\l\
|\ \ \ 70:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC10'\l\
|\ \ \ 71:\ ax:QI=0x1\l\
|\ \ \ 72:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 73:\ ax:SI=[`qj']\l\
|\ \ \ 74:\ si:SI=ax:SI\l\
|\ \ \ 75:\ ax:DI=`*.LC11'\l\
|\ \ \ 76:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC11'\l\
|\ \ \ 77:\ ax:QI=0\l\
|\ \ \ 78:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 79:\ ax:SI=0x1f4\l\
|\ \ \ 80:\ si:SI=ax:SI\l\
|\ \ \ 81:\ ax:DI=`*.LC12'\l\
|\ \ \ 82:\ di:DI=ax:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC12'\l\
|\ \ \ 83:\ ax:QI=0\l\
|\ \ \ 84:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 85:\ ax:SI=0\l\
|\ \ \ 92:\ \{flags:CCZ=unspec[[bp:DI-0x8],[0x28]]\ 80;clobber\ dx:DI;\}\l\
|\ \ \ 93:\ pc=\{(flags:CCZ==0)?L96:pc\}\l\
}"];

	fn_8_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 100:\ NOTE_INSN_BASIC_BLOCK\ 6\l\
|\ \ \ 94:\ call\ [`__stack_chk_fail']\ argc:0\l\
\ \ \ \ \ \ REG_ARGS_SIZE\ 0\l\
\ \ \ \ \ \ REG_NORETURN\ 0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_8_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 96:\ L96:\l\
|\ \ 101:\ NOTE_INSN_BASIC_BLOCK\ 7\l\
|\ \ \ 98:\ use\ ax:SI\l\
|\ \ 110:\ NOTE_INSN_EPILOGUE_BEG\l\
|\ \ 111:\ \{sp:DI=bp:DI+0x8;bp:DI=[bp:DI];clobber\ [scratch];\}\l\
\ \ \ \ \ \ REG_CFA_DEF_CFA\ sp:DI+0x8\l\
|\ \ 112:\ simple_return\l\
}"];

	fn_8_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 34:\ L34:\l\
|\ \ \ 21:\ NOTE_INSN_BASIC_BLOCK\ 3\l\
|\ \ \ 22:\ xmm0:SF=[bp:DI-0xc]\l\
|\ \ 116:\ xmm1:V2DF=const_vector\l\
|\ \ 117:\ xmm1:V2DF=vec_merge(vec_duplicate(float_extend(xmm0:SF)),xmm1:V2DF,0x1)\l\
|\ \ 118:\ xmm2:V2DF=const_vector\l\
|\ \ 119:\ xmm2:V2DF=vec_merge(vec_duplicate(float([bp:DI-0x1c])),xmm2:V2DF,0x1)\l\
|\ \ \ 25:\ xmm0:DF=[`*.LC5']\l\
\ \ \ \ \ \ REG_EQUAL\ 1.000000000000000055511151231257827021181583404541015625e-1\l\
|\ \ \ 26:\ xmm0:DF=xmm0:DF*xmm2:DF\l\
|\ \ \ 27:\ xmm0:DF=xmm0:DF+xmm1:DF\l\
|\ \ \ 28:\ xmm0:SF=float_trunc(xmm0:DF)\l\
|\ \ \ 29:\ [bp:DI-0xc]=xmm0:SF\l\
|\ \ \ 30:\ \{[bp:DI-0x1c]=[bp:DI-0x1c]+0x1;clobber\ flags:CC;\}\l\
}"];

	fn_8_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_8_basic_block_0:s -> fn_8_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_2:s -> fn_8_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_8_basic_block_3:s -> fn_8_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_8_basic_block_4:s -> fn_8_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_8_basic_block_4:s -> fn_8_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_5:s -> fn_8_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_8_basic_block_5:s -> fn_8_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_7:s -> fn_8_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_8_basic_block_0:s -> fn_8_basic_block_1:n [style="invis",constraint=true];
}
}
