digraph "cs1zj1-cs1.c.245r.expand" {
overlap=false;
subgraph "cluster_print_message" {
	style="dashed";
	color="black";
	label="print_message ()";
	fn_6_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_6_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_6_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 3:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 5:\ r82:DI=`*.LC0'\l\
|\ \ \ \ 6:\ di:DI=r82:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ \ \ 7:\ ax:SI=call\ [`puts']\ argc:0\l\
}"];

	fn_6_basic_block_0:s -> fn_6_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_6_basic_block_2:s -> fn_6_basic_block_1:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_6_basic_block_0:s -> fn_6_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_add" {
	style="dashed";
	color="black";
	label="add ()";
	fn_7_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_7_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_7_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 5:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ [r77:DI-0x4]=di:SI\l\
|\ \ \ \ 3:\ [r77:DI-0x8]=si:SI\l\
|\ \ \ \ 4:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 7:\ r84:SI=[r77:DI-0x4]\l\
|\ \ \ \ 8:\ r85:SI=[r77:DI-0x8]\l\
|\ \ \ \ 9:\ \{r82:SI=r84:SI+r85:SI;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_EQUAL\ [r77:DI-0x4]+[r77:DI-0x8]\l\
|\ \ \ 12:\ r83:SI=r82:SI\l\
|\ \ \ 16:\ ax:SI=r83:SI\l\
|\ \ \ 17:\ use\ ax:SI\l\
}"];

	fn_7_basic_block_0:s -> fn_7_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_7_basic_block_2:s -> fn_7_basic_block_1:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_7_basic_block_0:s -> fn_7_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	subgraph cluster_8_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_8_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 31:\ L31:\l\
|\ \ \ 32:\ NOTE_INSN_BASIC_BLOCK\ 5\l\
|\ \ \ 33:\ r88:SI=[r77:DI-0x20]\l\
|\ \ \ 35:\ flags:CCGC=cmp([r77:DI-0x1c],r88:SI)\l\
|\ \ \ 36:\ pc=\{(flags:CCGC\<=0)?L34:pc\}\l\
}"];

	fn_8_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 34:\ L34:\l\
|\ \ \ 21:\ NOTE_INSN_BASIC_BLOCK\ 4\l\
|\ \ \ 22:\ r82:SF=[r77:DI-0xc]\l\
|\ \ \ 23:\ r83:DF=float_extend(r82:SF)\l\
|\ \ \ 24:\ r84:DF=float([r77:DI-0x1c])\l\
|\ \ \ 25:\ r104:DF=[`*.LC5']\l\
\ \ \ \ \ \ REG_EQUAL\ 1.000000000000000055511151231257827021181583404541015625e-1\l\
|\ \ \ 26:\ r85:DF=r84:DF*r104:DF\l\
|\ \ \ 27:\ r86:DF=r83:DF+r85:DF\l\
|\ \ \ 28:\ r87:SF=float_trunc(r86:DF)\l\
|\ \ \ 29:\ [r77:DI-0xc]=r87:SF\l\
|\ \ \ 30:\ \{[r77:DI-0x1c]=[r77:DI-0x1c]+0x1;clobber\ flags:CC;\}\l\
}"];

	}
	fn_8_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_8_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_8_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 4:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 3:\ \{[r77:DI-0x8]=unspec[[0x28]]\ 79;scratch=0;clobber\ flags:CC;\}\l\
|\ \ \ \ 6:\ r99:SF=[`*.LC1']\l\
|\ \ \ \ 7:\ [r77:DI-0x14]=r99:SF\l\
|\ \ \ \ 8:\ r100:SF=[`*.LC2']\l\
|\ \ \ \ 9:\ [r77:DI-0x10]=r100:SF\l\
|\ \ \ 10:\ r101:SF=[`*.LC3']\l\
|\ \ \ 11:\ [r77:DI-0xc]=r101:SF\l\
|\ \ \ 12:\ \{r102:DI=r77:DI-0x20;clobber\ flags:CC;\}\l\
|\ \ \ 13:\ si:DI=r102:DI\l\
|\ \ \ 14:\ r103:DI=`*.LC4'\l\
|\ \ \ 15:\ di:DI=r103:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC4'\l\
|\ \ \ 16:\ ax:QI=0\l\
|\ \ \ 17:\ ax:SI=call\ [`*__isoc99_scanf']\ argc:0\l\
|\ \ \ 18:\ [r77:DI-0x1c]=0\l\
|\ \ \ 19:\ pc=L31\l\
}"];

	fn_8_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 37:\ NOTE_INSN_BASIC_BLOCK\ 6\l\
|\ \ \ 38:\ r89:SF=[r77:DI-0x10]\l\
|\ \ \ 39:\ r90:SI=fix(r89:SF)\l\
|\ \ \ 40:\ r91:SF=[r77:DI-0x14]\l\
|\ \ \ 41:\ r92:SI=fix(r91:SF)\l\
|\ \ \ 42:\ si:SI=r90:SI\l\
|\ \ \ 43:\ di:SI=r92:SI\l\
|\ \ \ 44:\ ax:SI=call\ [`add']\ argc:0\l\
|\ \ \ 45:\ r105:SI=ax:SI\l\
|\ \ \ 46:\ [r77:DI-0x18]=r105:SI\l\
|\ \ \ 47:\ ax:QI=0\l\
|\ \ \ 48:\ call\ [`print_message']\ argc:0\l\
|\ \ \ 49:\ r106:SI=[r77:DI-0x18]\l\
|\ \ \ 50:\ si:SI=r106:SI\l\
|\ \ \ 51:\ r107:DI=`*.LC6'\l\
|\ \ \ 52:\ di:DI=r107:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC6'\l\
|\ \ \ 53:\ ax:QI=0\l\
|\ \ \ 54:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 55:\ r108:DF=[`*.LC7']\l\
\ \ \ \ \ \ REG_EQUAL\ 3.140000000000000124344978758017532527446746826171875e+0\l\
|\ \ \ 56:\ xmm0:DF=r108:DF\l\
|\ \ \ 57:\ r109:DI=`*.LC8'\l\
|\ \ \ 58:\ di:DI=r109:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC8'\l\
|\ \ \ 59:\ ax:QI=0x1\l\
|\ \ \ 60:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 61:\ si:SI=0x2a\l\
|\ \ \ 62:\ r110:DI=`*.LC9'\l\
|\ \ \ 63:\ di:DI=r110:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC9'\l\
|\ \ \ 64:\ ax:QI=0\l\
|\ \ \ 65:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 66:\ r93:SF=[r77:DI-0xc]\l\
|\ \ \ 67:\ r94:DF=float_extend(r93:SF)\l\
|\ \ \ 68:\ xmm0:DF=r94:DF\l\
|\ \ \ 69:\ r111:DI=`*.LC10'\l\
|\ \ \ 70:\ di:DI=r111:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC10'\l\
|\ \ \ 71:\ ax:QI=0x1\l\
|\ \ \ 72:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 73:\ r95:SI=[`qj']\l\
|\ \ \ 74:\ si:SI=r95:SI\l\
|\ \ \ 75:\ r112:DI=`*.LC11'\l\
|\ \ \ 76:\ di:DI=r112:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC11'\l\
|\ \ \ 77:\ ax:QI=0\l\
|\ \ \ 78:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 79:\ r96:SI=0x1f4\l\
|\ \ \ 80:\ si:SI=r96:SI\l\
|\ \ \ 81:\ r113:DI=`*.LC12'\l\
|\ \ \ 82:\ di:DI=r113:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC12'\l\
|\ \ \ 83:\ ax:QI=0\l\
|\ \ \ 84:\ ax:SI=call\ [`printf']\ argc:0\l\
|\ \ \ 85:\ r97:SI=0\l\
|\ \ \ 88:\ r98:SI=r97:SI\l\
|\ \ \ 92:\ \{flags:CCZ=unspec[[r77:DI-0x8],[0x28]]\ 80;clobber\ scratch;\}\l\
|\ \ \ 93:\ pc=\{(flags:CCZ==0)?L96:pc\}\l\
}"];

	fn_8_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 100:\ NOTE_INSN_BASIC_BLOCK\ 9\l\
|\ \ \ 94:\ call\ [`__stack_chk_fail']\ argc:0\l\
\ \ \ \ \ \ REG_ARGS_SIZE\ 0\l\
\ \ \ \ \ \ REG_NORETURN\ 0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_8_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 96:\ L96:\l\
|\ \ 101:\ NOTE_INSN_BASIC_BLOCK\ 10\l\
|\ \ \ 97:\ ax:SI=r98:SI\l\
|\ \ \ 98:\ use\ ax:SI\l\
}"];

	fn_8_basic_block_0:s -> fn_8_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_2:s -> fn_8_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_8_basic_block_4:s -> fn_8_basic_block_5:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_8_basic_block_5:s -> fn_8_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_8_basic_block_5:s -> fn_8_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_6:s -> fn_8_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_8_basic_block_6:s -> fn_8_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_8_basic_block_10:s -> fn_8_basic_block_1:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_8_basic_block_0:s -> fn_8_basic_block_1:n [style="invis",constraint=true];
}
}
