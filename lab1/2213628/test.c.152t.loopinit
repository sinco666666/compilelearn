
;; Function main (main, funcdef_no=26, decl_uid=3964, cgraph_uid=27, symbol_order=26) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 8 6 7 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 7 }
;; 5 succs { 3 }
;; 3 succs { 6 8 }
;; 8 succs { 4 }
;; 6 succs { 3 }
;; 7 succs { 4 }
;; 4 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_27 -> { _5 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 9
Number of blocks to update: 4 ( 44%)


int main ()
{
  float arr$2;
  int sum1;
  int i;
  int n;
  double _1;
  double _2;
  double _3;
  double _4;
  float _5;
  double _7;
  int n.0_24;
  float _27;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  n.0_24 = n;
  if (n.0_24 >= 0)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # i_25 = PHI <i_17(6), 0(5)>
  # arr$2_28 = PHI <_5(6), 0.0(5)>
  _1 = (double) arr$2_28;
  _2 = (double) i_25;
  _3 = _2 * 1.000000000000000055511151231257827021181583404541015625e-1;
  _4 = _1 + _3;
  _5 = (float) _4;
  i_17 = i_25 + 1;
  if (i_17 <= n.0_24)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  # _27 = PHI <_5(3)>
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  # arr$2_29 = PHI <_27(8), 0.0(7)>
  sum1_13 = add (5, 7);
  print_message ();
  __printf_chk (2, "integer: %d\n", sum1_13);
  __printf_chk (2, "floating: %f\n", 3.140000000000000124344978758017532527446746826171875e+0);
  __printf_chk (2, "constant: %d\n", 42);
  _7 = (double) arr$2_29;
  __printf_chk (2, "sum2: %f\n", _7);
  n ={v} {CLOBBER(eol)};
  return 0;

}


